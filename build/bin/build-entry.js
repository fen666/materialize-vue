/**
 * 构建组件入口
 * 命令： npm run build:file
 * 作用： 根据 components.json 生成 src目录 下的 index.js 文件
 * npm 包：
 *   https://www.npmjs.com/package/uppercamelcase
 *   https://www.npmjs.com/package/json-templater
 * @ElemeFE：
 *   https://github.com/ElemeFE/element/blob/dev/build/bin/build-entry.js
 */
var components = require('../../components.json')
var path = require('path')
var uppercamelcase = require('uppercamelcase') // Pascal case
var render = require('json-templater/string')
var endOfLine = require('os').EOL // 换行
var fs = require('fs')

var OUTPUT_PATH = path.join(__dirname, '../../src/index.js')
var IMPORT_TEMPLATE = 'import {{name}} from \'../packages/{{package}}/index.js\''
var INSTALL_COMPONENT_TEMPLATE = '  {{name}}'
var MAIN_TEMPLATE = `/* Automatic generated by './build/bin/build-entry.js' */

{{include}}

const components = [
{{install}}
]

const install = function (Vue, opts = {}) {
  /* istanbul ignore if */
  if (install.installed) return

  components.map(component => {
    Vue.component(component.name, component)
  })
}

/* istanbul ignore if */
if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue)
}

export default {
  version: '{{version}}',
  install,
{{list}}
}
`

var componentNames = Object.keys(components)

var includeTemplate = []
var installTemplate = []
var listTemplate = []

componentNames.forEach(function (name) {
  var componentName = uppercamelcase(name)

  includeTemplate.push(render(IMPORT_TEMPLATE, {
    name: componentName,
    package: name
  }))

  installTemplate.push(render(INSTALL_COMPONENT_TEMPLATE, {
    name: componentName
  }))

  listTemplate = installTemplate
})

var template = render(MAIN_TEMPLATE, {
  include: includeTemplate.join(endOfLine),
  install: installTemplate.join(',' + endOfLine),
  version: process.env.VERSION || require('../../package.json').version,
  list: listTemplate.join(',' + endOfLine)
})

fs.writeFileSync(OUTPUT_PATH, template)
console.log('[build entry] DONE:', OUTPUT_PATH)
